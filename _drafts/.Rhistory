grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
Student;
Email;
Email2
SANC;
SAHC
# several 'edge' statements
Student->Email [label = 'WAS_SENT'];
Student->SANC  [label = 'FROM_CLUSTER' fontsize = 8.0];
Student->SAHC  [label = 'FROM_CLUSTER'];
Email->Email2  [label = 'NEXT'];
}
")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
Student;
Email;
Email2
SANC;
SAHC
# several 'edge' statements
Student->Email [label = 'WAS_SENT'];
Student->SANC  [label = 'FROM_CLUSTER' fontsize = 9.0];
Student->SAHC  [label = 'FROM_CLUSTER'];
Email->Email2  [label = 'NEXT'];
}
")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
Student;
Email;
Email2
SANC;
SAHC
# several 'edge' statements
Student->Email [label = 'WAS_SENT'];
Student->SANC  [label = 'FROM_CLUSTER' fontsize = 10.0];
Student->SAHC  [label = 'FROM_CLUSTER'];
Email->Email2  [label = 'NEXT'];
}
")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
Student;
Email;
Email2
SANC;
SAHC
# several 'edge' statements
Student->Email [label = 'WAS_SENT'];
Student->SANC  [label = 'FROM_CLUSTER' fontsize = 10.0];
Student->SAHC  [label = 'FROM_CLUSTER'];
Email->Email2  [label = 'NEXT'];
}
")
rep('Email', 2)
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT'];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT'];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "neato")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT'];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "twopi")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' size = 9.0];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "twopi")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' size = 8.0];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "twopi")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' size = 7.0];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "twopi")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 7.0];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "twopi")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.0];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "twopi")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = 'SANC'];
e [label = 'SAHC'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 2)
",
engine = "twopi")
library(DiagrammeR)
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = '@@1-3'];
e [label = '@@1-4'];
f [label = '@@1-5'];
g [label = 'Marketing Persona'];
h [label = 'Gender'];
i [label = 'State'];
j [label = 'Region'];
k [label = '@@2-1'];
l [label = '@@2-2'];
m [label = '@@2-3'];
n [label = '@@2-4'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 5)
",
engine = "twopi")
## http://www.graphviz.org/Documentation.php
## http://rich-iannone.github.io/DiagrammeR/graphviz.html
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = '@@1-3'];
e [label = '@@1-4'];
f [label = '@@1-5'];
g [label = 'Marketing Persona'];
h [label = 'Gender'];
i [label = 'State'];
j [label = 'Region'];
k [label = '@@2-1'];
l [label = '@@2-2'];
m [label = '@@2-3'];
n [label = '@@2-4'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
c -> d [label = 'NEXT'];
d -> e [label = 'NEXT'];
e -> f [label = 'NEXT'];
a -> d [label = 'FROM_CLUSTER'];
a -> e [label = 'FROM_CLUSTER'];
}
[1]: rep('Email', 5)
",
engine = "twopi")
## http://www.graphviz.org/Documentation.php
## http://rich-iannone.github.io/DiagrammeR/graphviz.html
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = '@@1-3'];
e [label = '@@1-4'];
f [label = '@@1-5'];
g [label = 'Marketing Persona'];
h [label = 'Gender'];
i [label = 'State'];
j [label = 'Region'];
k [label = '@@2-1'];
l [label = '@@2-2'];
m [label = '@@2-3'];
n [label = '@@2-4'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
c -> d [label = 'NEXT'];
d -> e [label = 'NEXT'];
e -> f [label = 'NEXT'];
a -> g [label = 'FROM_PERSONA'];
a -> h [label = 'HAS_GENDER'];
a -> i [label = 'LIVES_IN'];
i -> j [label = 'IS_IN'];
a -> j [label = 'IS_IN'];
}
[1]: rep('Email', 5)
[2]: reo('Interaction', 4)
",
engine = "twopi")
## http://www.graphviz.org/Documentation.php
## http://rich-iannone.github.io/DiagrammeR/graphviz.html
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = '@@1-3'];
e [label = '@@1-4'];
f [label = '@@1-5'];
g [label = 'Marketing Persona'];
h [label = 'Gender'];
i [label = 'State'];
j [label = 'Region'];
k [label = '@@2-1'];
l [label = '@@2-2'];
m [label = '@@2-3'];
n [label = '@@2-4'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
c -> d [label = 'NEXT'];
d -> e [label = 'NEXT'];
e -> f [label = 'NEXT'];
a -> g [label = 'FROM_PERSONA'];
a -> h [label = 'HAS_GENDER'];
a -> i [label = 'LIVES_IN'];
i -> j [label = 'IS_IN'];
a -> j [label = 'IS_IN'];
}
[1]: rep('Email', 5)
[2]: rep('Interaction', 4)
",
engine = "twopi")
## http://www.graphviz.org/Documentation.php
## http://rich-iannone.github.io/DiagrammeR/graphviz.html
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = '@@1-3'];
e [label = '@@1-4'];
f [label = '@@1-5'];
g [label = 'Marketing Persona'];
h [label = 'Gender'];
i [label = 'State'];
j [label = 'Region'];
k [label = '@@2-1'];
l [label = '@@2-2'];
m [label = '@@2-3'];
n [label = '@@2-4'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
c -> d [label = 'NEXT'];
d -> e [label = 'NEXT'];
e -> f [label = 'NEXT'];
a -> g [label = 'FROM_PERSONA'];
a -> h [label = 'HAS_GENDER'];
a -> i [label = 'LIVES_IN'];
i -> j [label = 'IS_IN'];
a -> k [label = 'HAS_INTERACTION' fontsize = 9.5];
k -> l [label = 'NEXT'];
l -> m [label = 'NEXT'];
m -> n [label = 'NEXT'];
}
[1]: rep('Email', 5)
[2]: rep('Interaction', 4)
",
engine = "twopi")
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = '@@1-3'];
e [label = '@@1-4'];
f [label = '@@1-5'];
g [label = 'Marketing Persona'];
h [label = 'Gender'];
i [label = 'State'];
j [label = 'Region'];
k [label = '@@2-1'];
l [label = '@@2-2'];
m [label = '@@2-3'];
n [label = '@@2-4'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
c -> d [label = 'NEXT'];
d -> e [label = 'NEXT'];
e -> f [label = 'NEXT'];
a -> g [label = 'FROM_PERSONA'];
a -> h [label = 'HAS_GENDER'];
a -> i [label = 'LIVES_IN'];
i -> j [label = 'IS_IN'];
a -> k [label = 'HAS_INTERACTION' fontsize = 9.5];
k -> l [label = 'NEXT'];
l -> m [label = 'NEXT'];
m -> n [label = 'NEXT'];
}
[1]: rep('Email', 5)
[2]: rep('Interaction', 4)
",
engine = "circo")
library(DiagrammeR)
grViz("
digraph neo4j {
# a 'graph' statement
graph [overlap = false, fontsize = 10]
# several 'node' statements
node [shape = circle, fontname = Helvetica]
a [label = 'Student'];
b [label = '@@1-1'];
c [label = '@@1-2'];
d [label = '@@1-3'];
e [label = '@@1-4'];
f [label = '@@1-5'];
g [label = 'Marketing Persona'];
h [label = 'Gender'];
i [label = 'State'];
j [label = 'Region'];
k [label = '@@2-1'];
l [label = '@@2-2'];
m [label = '@@2-3'];
n [label = '@@2-4'];
# several 'edge' statements
a -> b [label = 'WAS_SENT' fontsize = 9.5];
b -> c [label = 'NEXT'];
c -> d [label = 'NEXT'];
d -> e [label = 'NEXT'];
e -> f [label = 'NEXT'];
a -> g [label = 'FROM_PERSONA'];
a -> h [label = 'HAS_GENDER'];
a -> i [label = 'LIVES_IN'];
i -> j [label = 'IS_IN'];
a -> k [label = 'HAS_INTERACTION' fontsize = 9.5];
k -> l [label = 'NEXT'];
l -> m [label = 'NEXT'];
m -> n [label = 'NEXT'];
}
[1]: rep('Email', 5)
[2]: rep('Interaction', 4)
",
engine = "circo")
